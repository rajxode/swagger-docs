openapi: 3.0.0
info: # info about the project
  title: new Swagger documentation
  description: return some data
  version: 1.1.0

servers:
  # server url
  - url: "{protocol}://localhost:1000/api/{version}" 
    description: for local host server
    variables:
      # versions of api
      version:
        enum:
          - v1
          - v2
        default: v1
      #  protocols 
      protocol:
        enum:
          - http
          - https
        default: http

# for auth
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

# routes
paths:
  /greet:
    get:
    # grouping the paths
      tags:
        - Greetings
      summary: return a greeting message
      responses:
        200:
          description: Success, OK
          content:
            application/json:
              schema:
                type: string
                example: "greetingString"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /object:
    get:
    # grouping the paths
      tags:
        - Objects
      summary: return an object
      responses:
        200:
          description: Success, OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
        400:
          description: Bad request
        500:
          description: Internal Server Error
  
  /courses:
    get:
    # grouping the paths
      tags:
        - Arrays
      summary: return an array of courses
      responses:
        200:
          description: Success, OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /mycourses/{courseId}:
    get:
    # grouping the paths
      tags:
        - Objects
      summary: return an object containing a course based on courseId
      # for parameter passed inside the path
      parameters:
        - name: courseId
          in: path
          required: true
          default: 11
          schema:
            type: string
      responses:
        200:
          description: Success, OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /addcourse:
    # request type is post
    post:
      tags:
        - Objects
      summary: add a new course to the course array
      # type of data taken
      consumes:
        - application/json
      # type of output produced
      produces:
        - application/json
      # params passed to add new course
      requestBody:
        # all values are required
        required: true
        # content 
        content:
          application/json:
            schema:
              # takes an object
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
      responses:
        200:
        # return the entered object
          description: Success, OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /query:
    get:
      tags:
        - Objects
      summary: returns an object containing query data
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [delhi,mumbai,pune]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [mobile,web]
      responses:
        200:
          description: Success, OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  device:
                    type: string
        400:
          description: Bad Request
        500:
          description: Internal Server Error